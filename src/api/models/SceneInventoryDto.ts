/* tslint:disable */
/* eslint-disable */
/**
 * Skribbl Typo API
 * Skribbl Typo API for resources, admin tools and authentification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SceneInventoryItemDto } from './SceneInventoryItemDto';
import {
    SceneInventoryItemDtoFromJSON,
    SceneInventoryItemDtoFromJSONTyped,
    SceneInventoryItemDtoToJSON,
    SceneInventoryItemDtoToJSONTyped,
} from './SceneInventoryItemDto';

/**
 * 
 * @export
 * @interface SceneInventoryDto
 */
export interface SceneInventoryDto {
    /**
     * The activated scene Id
     * @type {number}
     * @memberof SceneInventoryDto
     */
    activeId?: number;
    /**
     * The activated scene theme Id
     * @type {number}
     * @memberof SceneInventoryDto
     */
    activeShift?: number;
    /**
     * The scenes in the inventory
     * @type {Array<SceneInventoryItemDto>}
     * @memberof SceneInventoryDto
     */
    scenes: Array<SceneInventoryItemDto>;
}

/**
 * Check if a given object implements the SceneInventoryDto interface.
 */
export function instanceOfSceneInventoryDto(value: object): value is SceneInventoryDto {
    if (!('scenes' in value) || value['scenes'] === undefined) return false;
    return true;
}

export function SceneInventoryDtoFromJSON(json: any): SceneInventoryDto {
    return SceneInventoryDtoFromJSONTyped(json, false);
}

export function SceneInventoryDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SceneInventoryDto {
    if (json == null) {
        return json;
    }
    return {
        
        'activeId': json['activeId'] == null ? undefined : json['activeId'],
        'activeShift': json['activeShift'] == null ? undefined : json['activeShift'],
        'scenes': ((json['scenes'] as Array<any>).map(SceneInventoryItemDtoFromJSON)),
    };
}

export function SceneInventoryDtoToJSON(json: any): SceneInventoryDto {
    return SceneInventoryDtoToJSONTyped(json, false);
}

export function SceneInventoryDtoToJSONTyped(value?: SceneInventoryDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'activeId': value['activeId'],
        'activeShift': value['activeShift'],
        'scenes': ((value['scenes'] as Array<any>).map(SceneInventoryItemDtoToJSON)),
    };
}

